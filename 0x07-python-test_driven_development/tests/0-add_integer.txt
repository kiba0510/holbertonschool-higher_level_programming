>>> add_integer = __import__('0-add_integer').add_integer

Check if both values are float type
>>> add_integer(2.0, 2.0)
4

check if values are int and float type
>>> add_integer(1, 2.0)
3
>>> add_integer(2.0, 1)
3

Check if values are two int type
>>> add_integer(1, 1)
2

Check the value type
>>> type(add_integer(2.0, 1))
<class 'int'>

>>> type(add_integer(2.0, 1.0))
<class 'int'>

check with a wrong value type
>>> add_integer("x", 1)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(1, "x")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer(-1, -3)
-4

>>> add_integer(float('nan'), 3)
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

>>> add_integer(float("inf"), 3)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(3)
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'b'
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'
